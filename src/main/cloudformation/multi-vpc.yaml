AWSTemplateFormatVersion: "2010-09-09"
Description: Multi VPC Deployment Environment

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Stack Configuration
        Parameters:
          - ProjectName
          - NotificationEmail
          - AllowedCIDR
          - EC2KeyPairBastion
          - EC2KeyPair
          - CreateIAM
          - CreateLogging
      - Label:
          default: Network Configuration
        Parameters:
          - AvailabilityZone1
          - AvailabilityZone2
          - CreateProductionVPC
          - CreateStagingVPC
          - CreateTestVPC
          - CreateDevVPC
          - ProductionVpcCidrBlock
          - StagingVpcCidrBlock
          - TestVpcCidrBlock
          - DevelopmentVpcCidrBlock
          - ManagementVpcCidrBlock

      - Label:
          default: Misc Settings
        Parameters:
          - StackTemplates

Parameters:

  ProjectName:
    Description: A descriptive label used in Name tags
    Type: String
    Default: ''

  NotificationEmail:
    Description: Notification email for security events if logging is enabled
    Type: String

  ProductionVpcCidrBlock:
    Description: Class B VPC Network CIDR, First two octets
    Type: String
    Default: '10.100'

  StagingVpcCidrBlock:
    Description: Class B VPC Network CIDR, First two octets
    Type: String
    Default: '10.101'

  TestVpcCidrBlock:
    Description: Class B VPC Network CIDR, First two octets
    Type: String
    Default: '10.102'

  DevelopmentVpcCidrBlock:
    Description: Class B VPC Network CIDR, First two octets
    Type: String
    Default: '10.103'

  ManagementVpcCidrBlock:
    Description: Class B VPC Network CIDR, First two octets
    Type: String
    Default: '10.10'

  AvailabilityZone1:
    Description: Availability Zone 1 Name in Region
    Type: AWS::EC2::AvailabilityZone::Name

  AvailabilityZone2:
    Description: Availability Zone 2 Name in Region
    Type: AWS::EC2::AvailabilityZone::Name

  StackTemplates:
    Description: Template service base URL
    Type: String
    Default: https://s3.us-east-2.amazonaws.com/cfn-stacks.com/templates

  CreateProductionVPC:
    Description: Should the Production VPC get created?
    Type: String
    Default: false

  CreateStagingVPC:
    Description: Should the Staging VPC get created?
    Type: String
    Default: false

  CreateTestVPC:
    Description: Should the Test VPC get created?
    Type: String
    Default: false

  CreateDevVPC:
    Description: Should the Dev VPC get created?
    Type: String
    Default: true

  CreateIAM:
    Description: Create IAM accounts
    Type: String
    Default: false

  CreateLogging:
    Description: Create Logging
    Type: String
    Default: false

  AllowedCIDR:
    Description: IPs allowed to access the bastion server
    Type: String
    Default: 199.223.21.100/32

  EC2KeyPairBastion:
    Description: The SSH key pair in your account to use for the bastion host login
    Type: AWS::EC2::KeyPair::KeyName

  EC2KeyPair:
    Description: The SSH key pair in your account to use for all other EC2 instance
      logins
    Type: AWS::EC2::KeyPair::KeyName

Conditions:

  cCreateProductionVPC: !Equals [ true, !Ref CreateProductionVPC]
  cCreateStagingVPC: !Equals [ true, !Ref CreateStagingVPC]
  cCreateTestVPC: !Equals [ true, !Ref CreateTestVPC]
  cCreateDevVPC: !Equals [ true, !Ref CreateDevVPC]
  cCreateIAM: !Equals [ true, !Ref CreateIAM ]
  cCreateLogging: !Equals [ true, !Ref CreateLogging ]

Resources:

  Iam:
    Type: 'AWS::CloudFormation::Stack'
    Condition: cCreateIAM
    Properties:
      TemplateURL: !Sub
        - ${StackTemplates}/${TemplateVersion}/iam.yaml
        - TemplateVersion: !FindInMap [ Constants, ValueOf, BaseInfraTemplateVersion ]
      TimeoutInMinutes: 20

  Logging:
    Type: 'AWS::CloudFormation::Stack'
    Condition: cCreateLogging
    Properties:
      TemplateURL: !Sub
        - ${StackTemplates}/${TemplateVersion}/logging.yaml
        - TemplateVersion: !FindInMap [ Constants, ValueOf, BaseInfraTemplateVersion ]
      TimeoutInMinutes: 20
      Parameters:
        pNotifyEmail: !Ref NotificationEmail
        pSupportsGlacier: !FindInMap [ RegionServiceSupport, !Ref 'AWS::Region', Glacier ]

  ProductionVpc:
    Type: 'AWS::CloudFormation::Stack'
    Condition: cCreateProductionVPC
    Properties:
      TemplateURL: !Sub
        - ${StackTemplates}/${TemplateVersion}/vpc-environment.yaml
        - TemplateVersion: !FindInMap [ Constants, ValueOf, BaseInfraTemplateVersion ]
      TimeoutInMinutes: 20
      Parameters:
        pVPCName: !Sub "${ProjectName} Production VPC"
        pRegionAZ1Name: !Ref AvailabilityZone1
        pRegionAZ2Name: !Ref AvailabilityZone2
        pManagementCIDR: !Sub "${ManagementVpcCidrBlock}.0.0/16"
        pCIDR: !Sub "${ProductionVpcCidrBlock}.0.0/16"
        pAppPrivateSubnetACIDR: !Sub "${ProductionVpcCidrBlock}.0.0/20"
        pAppPrivateSubnetBCIDR: !Sub "${ProductionVpcCidrBlock}.16.0/20"
        pDBPrivateSubnetACIDR: !Sub "${ProductionVpcCidrBlock}.32.0/24"
        pDBPrivateSubnetBCIDR: !Sub "${ProductionVpcCidrBlock}.33.0/24"
        pDMZSubnetACIDR: !Sub "${ProductionVpcCidrBlock}.34.0/24"
        pDMZSubnetBCIDR: !Sub "${ProductionVpcCidrBlock}.35.0/24"

  StagingVpc:
    Type: 'AWS::CloudFormation::Stack'
    Condition: cCreateStagingVPC
    Properties:
      TemplateURL: !Sub
        - ${StackTemplates}/${TemplateVersion}/vpc-environment.yaml
        - TemplateVersion: !FindInMap [ Constants, ValueOf, BaseInfraTemplateVersion ]
      TimeoutInMinutes: 20
      Parameters:
        pVPCName: !Sub "${ProjectName} Staging VPC"
        pRegionAZ1Name: !Ref AvailabilityZone1
        pRegionAZ2Name: !Ref AvailabilityZone2
        pManagementCIDR: !Sub "${ManagementVpcCidrBlock}.0.0/16"
        pCIDR: !Sub "${StagingVpcCidrBlock}.0.0/16"
        pAppPrivateSubnetACIDR: !Sub "${StagingVpcCidrBlock}.0.0/20"
        pAppPrivateSubnetBCIDR: !Sub "${StagingVpcCidrBlock}.16.0/20"
        pDBPrivateSubnetACIDR: !Sub "${StagingVpcCidrBlock}.32.0/24"
        pDBPrivateSubnetBCIDR: !Sub "${StagingVpcCidrBlock}.33.0/24"
        pDMZSubnetACIDR: !Sub "${StagingVpcCidrBlock}.34.0/24"
        pDMZSubnetBCIDR: !Sub "${StagingVpcCidrBlock}.35.0/24"

  TestVpc:
    Type: 'AWS::CloudFormation::Stack'
    Condition: cCreateTestVPC
    Properties:
      TemplateURL: !Sub
        - ${StackTemplates}/${TemplateVersion}/vpc-environment.yaml
        - TemplateVersion: !FindInMap [ Constants, ValueOf, BaseInfraTemplateVersion ]
      TimeoutInMinutes: 20
      Parameters:
        pVPCName: !Sub "${ProjectName} Test VPC"
        pRegionAZ1Name: !Ref AvailabilityZone1
        pRegionAZ2Name: !Ref AvailabilityZone2
        pManagementCIDR: !Sub "${ManagementVpcCidrBlock}.0.0/16"
        pCIDR: !Sub "${TestVpcCidrBlock}.0.0/16"
        pAppPrivateSubnetACIDR: !Sub "${TestVpcCidrBlock}.0.0/20"
        pAppPrivateSubnetBCIDR: !Sub "${TestVpcCidrBlock}.16.0/20"
        pDBPrivateSubnetACIDR: !Sub "${TestVpcCidrBlock}.32.0/24"
        pDBPrivateSubnetBCIDR: !Sub "${TestVpcCidrBlock}.33.0/24"
        pDMZSubnetACIDR: !Sub "${TestVpcCidrBlock}.34.0/24"
        pDMZSubnetBCIDR: !Sub "${TestVpcCidrBlock}.35.0/24"

  DevVpc:
    Type: 'AWS::CloudFormation::Stack'
    Condition: cCreateDevVPC
    Properties:
      TemplateURL: !Sub
        - ${StackTemplates}/${TemplateVersion}/vpc-environment.yaml
        - TemplateVersion: !FindInMap [ Constants, ValueOf, BaseInfraTemplateVersion ]
      TimeoutInMinutes: 20
      Parameters:
        pVPCName: !Sub "${ProjectName} Dev VPC"
        pRegionAZ1Name: !Ref AvailabilityZone1
        pRegionAZ2Name: !Ref AvailabilityZone2
        pManagementCIDR: !Sub "${ManagementVpcCidrBlock}.0.0/16"
        pCIDR: !Sub "${DevelopmentVpcCidrBlock}.0.0/16"
        pAppPrivateSubnetACIDR: !Sub "${DevelopmentVpcCidrBlock}.0.0/20"
        pAppPrivateSubnetBCIDR: !Sub "${DevelopmentVpcCidrBlock}.16.0/20"
        pDBPrivateSubnetACIDR: !Sub "${DevelopmentVpcCidrBlock}.32.0/24"
        pDBPrivateSubnetBCIDR: !Sub "${DevelopmentVpcCidrBlock}.33.0/24"
        pDMZSubnetACIDR: !Sub "${DevelopmentVpcCidrBlock}.34.0/24"
        pDMZSubnetBCIDR: !Sub "${DevelopmentVpcCidrBlock}.35.0/24"

  ManagementVpc:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL: !Sub
        - ${StackTemplates}/${TemplateVersion}/vpc-management.yaml
        - TemplateVersion: !FindInMap [ Constants, ValueOf, BaseInfraTemplateVersion ]
      TimeoutInMinutes: 20
      Parameters:
        pProductionCIDR: !If [ cCreateProductionVPC, !Sub "${ProductionVpcCidrBlock}.0.0/16", !Ref 'AWS::NoValue' ]
        pProductionVPC: !If [ cCreateProductionVPC, !GetAtt ProductionVpc.Outputs.rVPC, !Ref 'AWS::NoValue' ]
        pRouteTableProdPrivateA: !If [ cCreateProductionVPC, !GetAtt ProductionVpc.Outputs.rRouteTablePrivateA, !Ref 'AWS::NoValue' ]
        pRouteTableProdPrivateB: !If [ cCreateProductionVPC, !GetAtt ProductionVpc.Outputs.rRouteTablePrivateB, !Ref 'AWS::NoValue' ]
        pRouteTableProdDMZ: !If [ cCreateProductionVPC, !GetAtt ProductionVpc.Outputs.rRouteTableDMZ, !Ref 'AWS::NoValue' ]
        pStagingCIDR: !If [ cCreateStagingVPC, !Sub "${StagingVpcCidrBlock}.0.0/16", !Ref 'AWS::NoValue' ]
        pStagingVPC: !If [ cCreateStagingVPC, !GetAtt StagingVpc.Outputs.rVPC, !Ref 'AWS::NoValue' ]
        pRouteTableStagingPrivateA: !If [ cCreateStagingVPC, !GetAtt StagingVpc.Outputs.rRouteTablePrivateA, !Ref 'AWS::NoValue' ]
        pRouteTableStagingPrivateB: !If [ cCreateStagingVPC, !GetAtt StagingVpc.Outputs.rRouteTablePrivateB, !Ref 'AWS::NoValue' ]
        pRouteTableStagingDMZ: !If [ cCreateStagingVPC, !GetAtt StagingVpc.Outputs.rRouteTableDMZ, !Ref 'AWS::NoValue' ]
        pTestCIDR: !If [ cCreateTestVPC, !Sub "${TestVpcCidrBlock}.0.0/16", !Ref 'AWS::NoValue' ]
        pTestVPC: !If [ cCreateTestVPC, !GetAtt TestVpc.Outputs.rVPC, !Ref 'AWS::NoValue' ]
        pRouteTableTestPrivateA: !If [ cCreateTestVPC, !GetAtt TestVpc.Outputs.rRouteTablePrivateA, !Ref 'AWS::NoValue' ]
        pRouteTableTestPrivateB: !If [ cCreateTestVPC, !GetAtt TestVpc.Outputs.rRouteTablePrivateB, !Ref 'AWS::NoValue' ]
        pRouteTableTestDMZ: !If [ cCreateTestVPC, !GetAtt TestVpc.Outputs.rRouteTableDMZ, !Ref 'AWS::NoValue' ]
        pDevCIDR: !If [ cCreateDevVPC, !Sub "${DevelopmentVpcCidrBlock}.0.0/16", !Ref 'AWS::NoValue' ]
        pDevVPC: !If [ cCreateDevVPC, !GetAtt DevVpc.Outputs.rVPC, !Ref 'AWS::NoValue' ]
        pRouteTableDevPrivateA: !If [ cCreateDevVPC, !GetAtt DevVpc.Outputs.rRouteTablePrivateA, !Ref 'AWS::NoValue' ]
        pRouteTableDevPrivateB: !If [ cCreateDevVPC, !GetAtt DevVpc.Outputs.rRouteTablePrivateB, !Ref 'AWS::NoValue' ]
        pRouteTableDevDMZ: !If [ cCreateDevVPC, !GetAtt DevVpc.Outputs.rRouteTableDMZ, !Ref 'AWS::NoValue' ]
        pBastionSSHCIDR: !Ref AllowedCIDR
        pManagementCIDR: !Sub "${ManagementVpcCidrBlock}.0.0/16"
        pManagementPrivateSubnetACIDR: !Sub "${ManagementVpcCidrBlock}.0.0/20"
        pManagementPrivateSubnetBCIDR: !Sub "${ManagementVpcCidrBlock}.16.0/20"
        pManagementDMZSubnetACIDR: !Sub "${ManagementVpcCidrBlock}.34.0/24"
        pManagementDMZSubnetBCIDR: !Sub "${ManagementVpcCidrBlock}.35.0/24"
        pManagementVPCName: !Sub "${ProjectName} Management VPC"
        pEC2KeyPairBastion: !Ref EC2KeyPairBastion
        pEC2KeyPair: !Ref EC2KeyPair
        pBastionAmi: !FindInMap [ AWSAMIRegionMap, !Ref 'AWS::Region', AMZNLINUXHVM ]
        pRegionAZ1Name: !Ref AvailabilityZone1
        pRegionAZ2Name: !Ref AvailabilityZone2
        pBastionInstanceType: t2.small
        pSupportsNatGateway: !FindInMap [ RegionServiceSupport, !Ref 'AWS::Region', NatGateway ]
        pNatAmi: !FindInMap [ AWSAMIRegionMap, !Ref 'AWS::Region', AMZNLINUXHVM ]
        pNatInstanceType: !FindInMap [ AWSAMIRegionMap, !Ref 'AWS::Region', InstanceType ]

Mappings:

  Constants:
    ValueOf:
      BaseInfraTemplateVersion: 'release/com/cfnstacks/cfn-base-vpc/0.0.6'

  RegionServiceSupport:
    us-east-1:
      ConfigRules: true
      NatGateway: true
      Glacier: true
    us-east-2:
      ConfigRules: true
      NatGateway: true
      Glacier: true
    us-west-1:
      ConfigRules: true
      NatGateway: true
      Glacier: true
    us-west-2:
      ConfigRules: true
      NatGateway: true
      Glacier: true
    ca-central-1:
      ConfigRules: false
      NatGateway: true
      Glacier: true
    eu-central-1:
      NatGateway: true
      ConfigRules: true
      Glacier: true
    eu-west-1:
      ConfigRules: true
      NatGateway: true
      Glacier: true
    eu-west-2:
      ConfigRules: false
      NatGateway: true
      Glacier: true
    ap-northeast-1:
      ConfigRules: true
      NatGateway: true
      Glacier: true
    ap-northeast-2:
      ConfigRules: true
      NatGateway: true
      Glacier: true
    ap-south-1:
      ConfigRules: false
      NatGateway: true
      Glacier: true
    ap-southeast-1:
      ConfigRules: true
      NatGateway: true
      Glacier: false
    ap-southeast-2:
      ConfigRules: true
      NatGateway: true
      Glacier: true
    sa-east-1:
      ConfigRules: false
      NatGateway: true
      Glacier: false
    us-gov-west-1:
      ConfigRules: false
      NatGateway: false
      Glacier: false

  AWSInfoRegionMap:
    ap-northeast-1:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    ap-northeast-2:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    ap-south-1:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    ap-southeast-1:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    ap-southeast-2:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    ca-central-1:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    eu-central-1:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    eu-west-1:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    eu-west-2:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    sa-east-1:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    us-east-1:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    us-east-2:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    us-gov-west-1:
      Partition: aws-us-gov
      QuickStartS3URL: https://s3-us-gov-west-1.amazonaws.com
    us-west-1:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com
    us-west-2:
      Partition: aws
      QuickStartS3URL: https://s3.amazonaws.com

  CustomVariables:
    vResourceEnvironmentTagKey:
      Value: Environment
    vResourceEnvironmentTagValue:
      Value: development

  AWSAMIRegionMap:
    AMI:
      AMZNLINUXHVM: amzn-ami-hvm-2017.03.1.20170812-x86_64-gp2
    ap-northeast-1:
      AMZNLINUXHVM: ami-4af5022c
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    ap-northeast-2:
      AMZNLINUXHVM: ami-8663bae8
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    ap-south-1:
      AMZNLINUXHVM: ami-d7abd1b8
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    ap-southeast-1:
      AMZNLINUXHVM: ami-fdb8229e
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    ap-southeast-2:
      AMZNLINUXHVM: ami-30041c53
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    ca-central-1:
      AMZNLINUXHVM: ami-5ac17f3e
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    eu-central-1:
      AMZNLINUXHVM: ami-657bd20a
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    eu-west-1:
      AMZNLINUXHVM: ami-ebd02392
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    eu-west-2:
      AMZNLINUXHVM: ami-489f8e2c
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    sa-east-1:
      AMZNLINUXHVM: ami-d27203be
      InstanceType: m4.large
      InstanceTypeDatabase: db.m3.large
    us-east-1:
      AMZNLINUXHVM: ami-4fffc834
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    us-east-2:
      AMZNLINUXHVM: ami-ea87a78f
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    us-gov-west-1:
      AMZNLINUXHVM: ami-ffa61d9e
      InstanceType: m4.large
      InstanceTypeDatabase: db.m3.large
    us-west-1:
      AMZNLINUXHVM: ami-3a674d5a
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large
    us-west-2:
      AMZNLINUXHVM: ami-aa5ebdd2
      InstanceType: m4.large
      InstanceTypeDatabase: db.m4.large

Outputs:

  AmznLinuxHvmAMI:
    Description: Amazon Linux AMI
    Value: !FindInMap [ AWSAMIRegionMap, !Ref 'AWS::Region', AMZNLINUXHVM ]
  CfnStacksId:
    Description: cfn-stacks.com artifact id
    Value: @artifactId@
  CfnStacksVersion:
    Description: cfn-stacks.com artifact version
    Value: v@version@

  ManagementVpcCIDR:
    Value: !GetAtt ManagementVpc.Outputs.rVPCManagementCIDR

  ProductionVpc:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rVPC
  ProductionVpcCidrBlock:
    Condition: cCreateProductionVPC
    Value: !Sub '${ProductionVpcCidrBlock}.0.0/16'
  ProductionDmzSubnetA:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rDMZSubnetA
  ProductionDmzSubnetACIDR:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rDMZSubnetACIDR
  ProductionDmzSubnetB:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rDMZSubnetB
  ProductionDmzSubnetBCIDR:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rDMZSubnetBCIDR
  ProductionPrivateSubnetA:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rAppPrivateSubnetA
  ProductionPrivateSubnetACIDR:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rAppPrivateSubnetACIDR
  ProductionPrivateSubnetB:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rAppPrivateSubnetB
  ProductionPrivateSubnetBCIDR:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rAppPrivateSubnetBCIDR
  ProductionDBPrivateSubnetA:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rDBPrivateSubnetA
  ProductionDBPrivateSubnetACIDR:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rDBPrivateSubnetACIDR
  ProductionDBPrivateSubnetB:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rDBPrivateSubnetB
  ProductionDBPrivateSubnetBCIDR:
    Condition: cCreateProductionVPC
    Value: !GetAtt ProductionVpc.Outputs.rDBPrivateSubnetBCIDR

  StagingVpc:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rVPC
  StagingVpcCidrBlock:
    Condition: cCreateStagingVPC
    Value: !Sub '${StagingVpcCidrBlock}.0.0/16'
  StagingDmzSubnetA:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rDMZSubnetA
  StagingDmzSubnetACIDR:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rDMZSubnetACIDR
  StagingDmzSubnetB:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rDMZSubnetB
  StagingDmzSubnetBCIDR:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rDMZSubnetBCIDR
  StagingPrivateSubnetA:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rAppPrivateSubnetA
  StagingPrivateSubnetACIDR:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rAppPrivateSubnetACIDR
  StagingPrivateSubnetB:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rAppPrivateSubnetB
  StagingPrivateSubnetBCIDR:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rAppPrivateSubnetBCIDR
  StagingDBPrivateSubnetA:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rDBPrivateSubnetA
  StagingDBPrivateSubnetACIDR:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rDBPrivateSubnetACIDR
  StagingDBPrivateSubnetB:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rDBPrivateSubnetB
  StagingDBPrivateSubnetBCIDR:
    Condition: cCreateStagingVPC
    Value: !GetAtt StagingVpc.Outputs.rDBPrivateSubnetBCIDR

  TestVpc:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rVPC
  TestVpcCidrBlock:
    Condition: cCreateTestVPC
    Value: !Sub '${TestVpcCidrBlock}.0.0/16'
  TestDmzSubnetA:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rDMZSubnetA
  TestDmzSubnetACIDR:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rDMZSubnetACIDR
  TestDmzSubnetB:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rDMZSubnetB
  TestDmzSubnetBCIDR:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rDMZSubnetBCIDR
  TestPrivateSubnetA:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rAppPrivateSubnetA
  TestPrivateSubnetACIDR:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rAppPrivateSubnetACIDR
  TestPrivateSubnetB:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rAppPrivateSubnetB
  TestPrivateSubnetBCIDR:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rAppPrivateSubnetBCIDR
  TestDBPrivateSubnetA:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rDBPrivateSubnetA
  TestDBPrivateSubnetACIDR:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rDBPrivateSubnetACIDR
  TestDBPrivateSubnetB:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rDBPrivateSubnetB
  TestDBPrivateSubnetBCIDR:
    Condition: cCreateTestVPC
    Value: !GetAtt TestVpc.Outputs.rDBPrivateSubnetBCIDR

  DevVpc:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rVPC
  DevVpcCidrBlock:
    Condition: cCreateDevVPC
    Value: !Sub '${DevelopmentVpcCidrBlock}.0.0/16'
  DevDmzSubnetA:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rDMZSubnetA
  DevDmzSubnetACIDR:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rDMZSubnetACIDR
  DevDmzSubnetB:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rDMZSubnetB
  DevDmzSubnetBCIDR:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rDMZSubnetBCIDR
  DevPrivateSubnetA:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rAppPrivateSubnetA
  DevPrivateSubnetACIDR:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rAppPrivateSubnetACIDR
  DevPrivateSubnetB:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rAppPrivateSubnetB
  DevPrivateSubnetBCIDR:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rAppPrivateSubnetBCIDR
  DevDBPrivateSubnetA:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rDBPrivateSubnetA
  DevDBPrivateSubnetACIDR:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rDBPrivateSubnetACIDR
  DevDBPrivateSubnetB:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rDBPrivateSubnetB
  DevDBPrivateSubnetBCIDR:
    Condition: cCreateDevVPC
    Value: !GetAtt DevVpc.Outputs.rDBPrivateSubnetBCIDR