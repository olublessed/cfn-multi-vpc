plugins {
    id 'com.cfnstacks.gradle.artifacts3' version '0.1.6'
}

group = 'com.cfnstacks'
description = 'Multi-VPC Environment'

ext.params = [:]
if(project.file('local-config.groovy').exists()) { apply from: 'local-config.groovy' }
def setParam(name, defaultValue) { (hasProperty(name)) ? property(name) : (params[name]) ? params[name] :defaultValue }

ext.params.with {
    failure = setParam('failure', 'ROLLBACK') // DO_NOTHING | ROLLBACK | DELETE
    group = setParam('group', 'com.cfnstacks')
    profile = setParam('profile', '')
    region = setParam('region', 'us-east-2')
    repo = setParam('repo', 'cfn-stacks.com.s3.us-east-2.amazonaws.com')
    stackParamSet = setParam('stackParamSet', 'template')
    template = setParam('template', 'multi-vpc.yaml')
}

ext.stackParameters = [
    template: [:] // template only, not launching any stacks
]

artifacts3 {
    group = params.group
    profileName = params.profile
    repo = params.repo
}

aws {
    profileName = params.profile
    region = params.region
}

cloudFormation {
    templateFile = project.file("build/cloudformation/${params.template}")
    stackName = params.stack
    capabilityIam true
    onFailure params.failure
    conventionMapping.stackParams = { project.ext.stackParameters[project.ext.params.stackParamSet] }
}

asciidoctor {
    backends 'html5', 'pdf'
    attributes \
        'build-gradle': file('build.gradle'),
        'stylesheet': 'stylesheets/style.css',
        'source-highlighter': 'coderay',
        'imagesdir': 'images',
        'toc': 'left',
        'icons': 'font',
        'setanchors': '',
        'idprefix': '',
        'idseparator': '-',
        'docinfo1': '',
        'projectVersion': project.version
}